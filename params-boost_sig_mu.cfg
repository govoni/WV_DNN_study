# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[input]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rootfile   = /Users/govoni/NoBackup/ntuples/ntuple_WVjj_2018.root 
# 1/fb
lumi       = 100.
# categories = res_sig_ele res_sig_mu boost_sig_ele
# label      = dnn_inputs_resolved
# only one category here, as the cross-section above refers to one category only
category   = boost_sig_mu 
label      = dnn_inputs_boosted

signal     = VBS
# cross-section of the signal sample
#  - the following XS come from the sum of weights of the boosted_sig_mu samples
#  - assuming pb
signal_XS  = 81.17
# efficiency of selections applied before the calculation of the cross-section
signal_eff = 1.

# bkg        = DY     VBF-V  VV     VVV  Vg    VgS  Wjets_HT top
# # cross-section of the bkg samples
# #  - the following XS come from the sum of weights of the boosted_sig_mu samples
# #  - assuming pb
# bkg_XS     = 210.96 106.20 373.62 5.49 30.52 4.23 2567.72  632.58 
# # efficiency of selections applied before the calculation of the cross-section
# bkg_eff    = 1.     1.     1.     1.   1.    1.   1.       1. 

#simplified set of backgrounds used
bkg        =  Wjets_HT DY     VV     
bkg_XS     =  2567.72  210.96 373.62  
bkg_eff    =  1.       1.     1.     


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[study]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# list of variables present in the ROOT TTree
variables  = weight GenJetV1E GenJetV1Px GenJetV1Py GenJetV1Pz GenJetV2E GenJetV2Px GenJetV2Py GenJetV2Pz GenJetVBS1E GenJetVBS1Px GenJetVBS1Py GenJetVBS1Pz GenJetVBS2E GenJetVBS2Px GenJetVBS2Py GenJetVBS2Pz GenJetVBSMjj GenJetVBSPt GenJetVMjj GenJetVPt GenLeptonE GenLeptonPDGID GenLeptonPx GenLeptonPy GenLeptonPz GenMETPhi GenMETPt NLep Nele Njets Nmu VBS_Category
# list of variables to be used for training
trainvars  = GenJetVBSMjj GenJetVMjj GenMETPt

#list of DNN layers
#DNNlayers = L1 L1 L1 L1 Lout
DNNlayers = L1 DO L1 DO L1 DO L1 Lout
# different types of layers used
L1   = dense   10  relu
DO   = dropout 0.1
Lout = dense   1   sigmoid

DNNoptimizer = adam
DNNloss      = binary_crossentropy
# DNNloss      = kullback_leibler_divergence
# DNNloss      = accuracy
# https://keras.io/api/metrics/
#  - Metric functions are similar to loss functions, 
#    except that the results from evaluating a metric 
#    are not used when training the model. 
#    (precision = purezza)
#    (recall = efficienza)
DNNmetrics   = binary_crossentropy accuracy kullback_leibler_divergence AUC

# patience, min_delta
DNNEarlyStop = 15 0.0001
DNNepochs    = 50
DNNbatchSize = 32


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[plot]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

yscale = log
# yscale = linear

# color of the samples
#  - https://matplotlib.org/stable/gallery/color/named_colors.html
# sample = plot_color     linecolor
DY       = deepskyblue    deepskyblue     
VBF-V    = dodgerblue     dodgerblue 
VV       = yellow         yellow 
VVV      = gold           gold          
Vg       = orange         orange        
VgS      = darkorange     darkorange   
Wjets_HT = limegreen      limegreen         
top      = hotpink        hotpink         
VBS      = white          red

# histogram properties
# var name = nbins min max units
GenJetV1E      = 50 0  3000 GeV    
GenJetV1Px     = 50 0  600  GeV     
GenJetV1Py     = 50 0  600  GeV     
GenJetV1Pz     = 50 0  3000 GeV     
GenJetV2E      = 50 0  3000 GeV    
GenJetV2Px     = 50 0  600  GeV     
GenJetV2Py     = 50 0  600  GeV     
GenJetV2Pz     = 50 0  3000 GeV     
GenJetVBS1E    = 50 0  3000 GeV      
GenJetVBS1Px   = 50 0  600  GeV       
GenJetVBS1Py   = 50 0  600  GeV       
GenJetVBS1Pz   = 50 0  3000 GeV       
GenJetVBS2E    = 50 0  3000 GeV      
GenJetVBS2Px   = 50 0  600  GeV       
GenJetVBS2Py   = 50 0  600  GeV       
GenJetVBS2Pz   = 50 0  3000 GeV       
GenJetVBSMjj   = 50 0  3000 GeV       
GenJetVBSPt    = 50 0  600  GeV      
GenJetVMjj     = 50 20 200  GeV     
GenJetVPt      = 50 0  600  GeV    
GenLeptonE     = 50 0  3000 GeV     
GenLeptonPx    = 50 0  600  GeV       
GenLeptonPy    = 50 0  600  GeV 
GenLeptonPz    = 50 0  3000 GeV 
GenMETPt       = 50 0 600   GeV 
GenMETPhi      = 20 -3.14 3.14 rad
GenLeptonPDGID = 30 -30 30
NLep           = 5 0 5
Nele           = 5 0 5 
Njets          = 20 0 20
Nmu            = 5 0 5
VBS_Category   = 100 -100 100 

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[output]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# dataframes folder
dfdir = /Users/govoni/NoBackup/ntuples/
# tag of the outputfolder, to be placed in the current directory
tag   = prova_DO0p10_50e